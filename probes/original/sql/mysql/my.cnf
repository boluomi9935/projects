[mysqld]
socket=/var/lib/mysql/mysql.sock
user=mysql
skip-bdb

# Default to using old password format for compatibility with mysql 3.x
# clients (those using the mysqlclient10 compatibility package).
old_passwords=1

# To allow mysqld to connect to a MySQL Cluster management daemon, uncomment
# these lines and adjust the connectstring as needed.
#ndbcluster
#ndb-connectstring="nodeid=4;host=localhost:1186"

#The bigger you set this the less disk I/O is needed to access data in tables. On a dedicated database server you may set this parameter up to 80% of the machine physical memory size. Do not set it too large, though, because competition of the physical memory may cause paging in the operating system.
innodb_buffer_pool_size=1536M
#Number of file I/O threads in InnoDB. Normally, this should be 4, but on Windows disk I/O may benefit from a larger number.
innodb_file_io_threads=8


#Helps in performance tuning in heavily concurrent environments.
innodb_thread_concurrency=12
#Don't cache results that are bigger than this.
query_cache_limit=1024M
#The memory allocated to store results from old queries.
query_cache_size=64M




#The size of the buffer used for index blocks. Increase this to get better index handling (for all reads and multiple writes) to as much as you can afford; 64M on a 256M machine that mainly runs MySQL is quite common.
key_buffer_size=1024M
#Each thread that needs to do a sort allocates a buffer of this size.
sort_buffer_size=24M
#Size of a memory pool InnoDB uses to store data dictionary information and other internal data structures. A sensible value for this might be 2M, but the more tables you have in your application the more you will need to allocate here. If InnoDB runs out of memory in this pool, it will start to allocate memory from the operating system, and write warning messages to the MySQL error log.
innodb_additional_mem_pool_size=20M
#This option makes InnoDB to store each created table into its own .ibd file.
#innodb_file_per_table


#Timeout in seconds InnoDB transaction may wait for a lock before being rolled back. InnoDB automatically detects transaction deadlocks in its own lock table and rolls back the transaction. If you use the LOCK TABLES command, or other transaction-safe storage engines than InnoDB in the same transaction, then a deadlock may arise which InnoDB cannot notice. In cases like this the timeout is useful to resolve the situation.
innodb_lock_wait_timeout=50


#Permits the application to give the threads system a hint for the desired number of threads that should be run at the same time
thread_concurrency=16


#Specifies when log files are flushed to disk.
innodb_flush_log_at_trx_commit=0
#Method used for flushing the log files to disk.
innodb_flush_method=fdatasync






#Helps to save your data in case the disk image of the database becomes corrupt.
#innodb_force_recovery=4




#If no specific storage engine/table type is defined in an SQL-Create statement the default type will be used.
default-storage-engine=innodb




#How many threads we should keep in a cache for reuse.
thread_cache_size=4




#Max packetlength to send/receive from to server.
max_allowed_packet=16M




#This is relevant only if you use multiple tablespaces in InnoDB. This specifies the maximum how many .ibd files InnoDB can keep open at one time. The minimum value for this is 10. The default is 300.
innodb_open_files=2500
#Percentage of dirty pages allowed in bufferpool
innodb_max_dirty_pages_pct=20




#Path to the temporary directory.
#tmpdir=/mnt/ssd/mysql/tmp





#The common part of the directory path for all InnoDB datafiles. Leave this empty if you want to split the data files onto different drives.
#innodb_data_home_dir=/mnt/ssd/mysql/db




#This option makes InnoDB to store each created table into its own .ibd file.
innodb_file_per_table


#Path to the temporary directory.
#tmpdir=/mnt/ssd/mysql/tmp










#Path to the database root
datadir=/mnt/ssd/mysql/db/db


#Path to the temporary directory.
tmpdir=/mnt/ssd/mysql/tmp


#Size of each log file in a log group in megabytes. Sensible values range from 1M to 1/n-th of the size of the buffer pool specified below, where n is the number of log files in the group. The larger the value, the less checkpoint flush activity is needed in the buffer pool, saving disk I/O. But larger log files also mean that recovery will be slower in case of a crash. The combined size of log files must be less than 4 GB on 32-bit computers. The default is 5M.
#innodb_log_file_size=10M
#The size of the buffer which InnoDB uses to write log to the log files on disk. Sensible values range from 1M to 8M. A big log buffer allows large transactions to run without a need to write the log to disk until the transaction commit. Thus, if you have big transactions, making the log buffer big will save disk I/O.
#innodb_log_buffer_size=20M




#This value should currently be disabled.
innodb_log_archive=0




#The number of seconds the mysqld server is waiting for a connect packet before responding with 'Bad handshake'
#connect_timeout=10
#The number of seconds the server waits for activity on an interactive connection before closing it.
#interactive_timeout=120
#The number of seconds the server waits for activity on a connection before closing it
#wait_timeout=60




#Each thread that does a sequential scan allocates a buffer of this size for each table it scans. If you do many sequential scans, you may want to increase this value.
read_buffer_size=48M
#When reading rows in sorted order after a sort, the rows are read through this buffer to avoid a disk seeks. If not set, then it's set to the value of record_buffer.
read_rnd_buffer_size=96M


#The number of open tables for all threads.
table_cache=1536
#The size of the buffer that is used for full joins.
join_buffer_size=1M








#Number of log files in the log group. InnoDB writes to the files in a circular fashion. Value 2 is recommended here. The default is 2.
innodb_log_files_in_group=2
#Size of each log file in a log group in megabytes. Sensible values range from 1M to 1/n-th of the size of the buffer pool specified below, where n is the number of log files in the group. The larger the value, the less checkpoint flush activity is needed in the buffer pool, saving disk I/O. But larger log files also mean that recovery will be slower in case of a crash. The combined size of log files must be less than 4 GB on 32-bit computers. The default is 5M.
#innodb_log_file_size=64M


#The size of the buffer which InnoDB uses to write log to the log files on disk. Sensible values range from 1M to 8M. A big log buffer allows large transactions to run without a need to write the log to disk until the transaction commit. Thus, if you have big transactions, making the log buffer big will save disk I/O.
innodb_log_buffer_size=1024M


#If an in-memory temporary table exceeds this size, MySQL will automatically convert it to an on-disk MyISAM table.
tmp_table_size=1536M
#Size of tree cache used in bulk insert optimisation. Note that this is a limit per thread!
bulk_insert_buffer_size=20M
#Don't allow creation of heap tables bigger than this.
max_heap_table_size=1536M
#Maximum number of temporary tables a client can keep open at a time.
max_tmp_tables=10




#The number of simultaneous clients allowed.
max_connections=10










[mysqld_safe]
log-error=/var/log/mysqld.log
pid-file=/var/run/mysqld/mysqld.pid

[ndbd]
# If you are running a MySQL Cluster storage daemon (ndbd) on this machine,
# adjust its connection to the management daemon here.
# Note: ndbd init script requires this to include nodeid!
connect-string="nodeid=2;host=localhost:1186"

[ndb_mgm]
# connection string for MySQL Cluster management tool
connect-string="host=localhost:1186"
